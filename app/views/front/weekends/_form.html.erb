
<%= form_for [:front, @weekend] do |f| %>
  <div class="row">
    <div class="offset-md-2 col-md-8">
      <%= render "/shared/form_errors", :object => f.object %>
      <div id="weekend-description" contenteditable="true">My perfect weekend starts on Friday at 18:00 ... </div>
      <%= f.text_area :body, class: "form-control", rows: 20, placeholder: t("activerecord.attributes.weekend.body"), id: "weekend-text-area" %>

      <div class="weekend-button text-end nice-font">
        <%= f.submit "Send", class: "btn btn-nice" %>
      </div>
    </div>

    <div class="col-md-2">
      button
    </div>
  </div>
<% end %>



<script>



const weekendDescriptionElement = document.getElementById("weekend-description")
const STRONG_PATTERNS = [
  /thursday/ig,
  /friday/ig,
  /saturday/ig,
  /sunday/ig,
  /\d\d:\d\d/ig,
];

weekendDescriptionElement.addEventListener("input", onDescriptionChange, false);
weekendDescriptionElement.addEventListener("input", updateTextArea, false);
weekendDescriptionElement.addEventListener("keydown", filterKeys, false);
updateTextArea();
strongifyWeekendDiv();
setCursorPositionAtTheEndOfWeekendDiv();

function filterKeys(event) {
  console.log("filterKeys", event);
  if (event.which === 13) {
    event.preventDefault();
  }
}

function onDescriptionChange(event) {
  console.log("onDescriptionChange", event);

  strongifyWeekendDiv();
}

function updateTextArea() {
  document.getElementById("weekend-text-area").value = weekendDescriptionElement.textContent;
}

function strongifyWeekendDiv() {
  let actualCursorPosition = getCursorPosition();
  let previousInnerHTML = weekendDescriptionElement.innerHTML;
  let result = weekendDescriptionElement.textContent;

  STRONG_PATTERNS.forEach(regex => {
    result = strongifyText(result, regex);
  });

  if(previousInnerHTML !== result) {
    console.debug("not equal: '" + previousInnerHTML + "', '" + result + "'");
    weekendDescriptionElement.innerHTML = result;
    setCursorPosition(weekendDescriptionElement, actualCursorPosition);
  }
}

function setCursorPositionAtTheEndOfWeekendDiv() {
  let contentLength = weekendDescriptionElement.textContent.length;
  setCursorPosition(weekendDescriptionElement, contentLength);
}

function strongifyText(text, regex) {
  return text.replace(regex, "<strong>$&</strong>");
}

function getCursorPosition() {
    var sel = document.getSelection();
    sel.modify("extend", "backward", "paragraphboundary");
    var pos = sel.toString().length;
    if(sel.anchorNode != undefined) sel.collapseToEnd();

    return pos;
}

function setCursorPosition(element, desiredPosition) {
  console.debug("setCursorPosition", desiredPosition);

  let childNodes = element.childNodes;
  let childIndex = 0;
  let childPosition = 0;
  let position = 0;
  let actualChild = childNodes[0];

  if( actualChild.firstChild ) {
    actualChild = actualChild.firstChild;
  }

  while(position < desiredPosition) {
    position += 1;
    childPosition += 1;

    if(childPosition >= actualChild.length && position < desiredPosition) {
      childIndex += 1;
      childPosition = 0;
      actualChild = childNodes[childIndex];

      if(actualChild.firstChild) {
        actualChild = actualChild.firstChild;
      }
    }
  }

  setCursorPositionInChildNode(actualChild, childPosition);
}

function setCursorPositionInChildNode(element, position) {
  var sel = window.getSelection();
  sel.setPosition(element, position);
}
</script>



<style>
@import url('https://fonts.googleapis.com/css2?family=Special+Elite&display=swap');

#weekend-description {
  background-color: #D8E2DC;
  padding: 3em;
  font-family: 'Special Elite', cursive;
  font-size: 1.3em;
  min-height: 20em;
}

#weekend-description strong {
  color: #F82F2F;
}

#weekend-text-area {
  display: none;
}

[contenteditable] {
  outline: 0px solid transparent;
}

.weekend-button input {
  margin: -1em 1em 0 0;
  box-shadow: 2px 7px 9px -3px rgb(93 91 91 / 76%);
  font-size: 2em;
  padding: 0 1em;
}

.btn-nice {
  background-color: #FEC5BB;
  color:#272625;
  border-color: #FEC5BB;
}

.btn-nice:hover,
.btn-nice:active,
.btn-nice:visited,
.btn-nice:focus {
  background-color: #f5b0a3;
  color:#272625;
  border-color: #f5b0a3;
}
 
</style>
